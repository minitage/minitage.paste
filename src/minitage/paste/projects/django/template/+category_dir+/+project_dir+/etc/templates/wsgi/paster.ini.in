# bv.clientb WSGI CONFIGURATION FILE
[DEFAULT]
debug=${options.debug}

[composite:main]
use=egg:Paste#urlmap
# % if options.debug=='false' %
/static/admin=padminmedia
/static/=pstatic
/media/=pmedia
# % end %
/=pmain
/threads/=watch_threads

[pipeline:pmain]
pipeline= fvhm exc translogger projectapp

[pipeline:pstatic]
pipeline= fvhm translogger exc staticapp

[pipeline:pmedia]
pipeline= fvhm translogger exc mediaapp

[pipeline:padminmedia]
pipeline= fvhm translogger exc adminmediaapp

[app:watch_threads]
use=egg:Paste#watch_threads

[filter:fvhm]
use = egg:repoze.vhm#vhm_xheaders

[filter:translogger]
use=egg:Paste#translogger
setup_console_handler = False
logger_name = wsgi

[filter:debug]
use=egg:Paste#printdebug

[filter:exc]
use=egg:dj.paste#weberror
debug = true
error_email = freesoftware@makina-corpus.com
from_address = mobyle@test.com
;show_exceptions_in_wsgi_errors = true
smtp_server = localhost
;smtp_use_tls =
;smtp_username = janitor
;smtp_password = "janitor's password"
error_subject_prefix = "formhub Error"

[app:projectapp]
use=egg:dj.paste
django_settings_module=${options.dsm}

[app:staticapp]
use = egg:Paste#static
document_root = ${parts.buildout.directory}/src.mrdeveloper/formhub-app/static

[app:mediaapp]
use = egg:Paste#static
document_root = ${parts.buildout.directory}/src.mrdeveloper/formhub-app/media

[app:adminmediaapp]
use = egg:Paste#pkg_resources
egg = Django
resource_name=django/contrib/admin/media/

[loggers]
keys = root,wsgi,routes

[handlers]
keys = fconsole,console,accesslog,errorlog

[formatters]
keys = generic,accesslog

# Send warnings that are not caught by other loggers to the console
[logger_root]
level = NOTSET
handlers = console,fconsole

# Send all messages to the 'wsgi' logger to the accesslog and errorlog handlers
[logger_wsgi]
level = NOTSET
handlers = accesslog,errorlog,console,fconsole
qualname = wsgi
propagate = 0

# Routes (the URL dispatcher) sends debug information to the 'routes.middleware' logger
# with DEBUG level.
[logger_routes]
level = NOTSET
handlers = console,fconsole
qualname = routes.middleware
propagate = 0

# Handler for printing messages to the console
[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = INFO
formatter = generic

# Handler for writing access.log style log lines to an "access.log" file
[handler_fconsole]
class = FileHandler
args = ('${parts.buildout.directory}/var/log/console.log','a')
level = INFO
formatter = generic


# Handler for writing access.log style log lines to an "access.log" file
[handler_accesslog]
class = FileHandler
args = ('${parts.buildout.directory}/var/log/access.log','a')
level = INFO
formatter = accesslog

# Handler for writing error messages to an "error.log" file
[handler_errorlog]
class = FileHandler
args = ('${parts.buildout.directory}/var/log/error.log','a')
level = WARNING
formatter = generic

# A generic formatter that prints the time, the logger's name, the level and the message
[formatter_generic]
format = %(asctime)s %(name)s[%(levelname)s] %(message)s

# A trivial formatter that just passes-through the log message.
# Translogger already creates Apache-style log messages. No need to change that.
[formatter_accesslog]
format = %(message)s

[server:main]
use=${options.wsgi_server}
host=${options.host}
port=${options.port}

# vim:set et ts=4 sts=4 ft=cfg:
{% end %}
